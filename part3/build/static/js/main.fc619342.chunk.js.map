{"version":3,"sources":["services/persons.js","components/Person.js","components/Persons.js","components/PersonForm.js","components/Filter.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Person","person","handleDeleteFunc","name","number","onClick","Persons","persons","searchQuery","setPersons","setErrorMessage","handleDelete","window","confirm","PersonService","catch","error","filter","p","includes","map","PersonForm","setInfoMessage","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","samePerson","find","obj","updatedPerson","updated","setTimeout","returnedPerson","concat","console","log","value","onChange","target","type","Filter","setSearchQuery","App","infoMessage","errorMessage","Notification","className","ErrorNotification","useEffect","initialPersons","query","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fc619342.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request\n    .then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nconst deleteRequest = (id) => {\n  const request = axios.delete(`${baseUrl}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update, deleteRequest }\n","import React from 'react'\nimport PersonService from \"../services/persons\";\n\nconst Person = ({ person, handleDeleteFunc }) => {\n\n  return (\n    <div>{person.name} {person.number} <button onClick={() => handleDeleteFunc(person)}>delete</button></div>\n  )\n}\n\nexport default Person","import React from 'react'\nimport Person from \"./Person\";\nimport PersonService from \"../services/persons\";\n\nconst Persons = ({ persons, searchQuery, setPersons, setErrorMessage }) => {\n  const handleDelete = (person) => {\n    if (window.confirm(`delete ${person.name} ?`)) {\n      PersonService.deleteRequest(person.id)\n        .catch(error =>\n          setErrorMessage(`Information of ${person.name} has already been removed from server`)\n        )\n      setPersons(persons.filter(p => p.id !== person.id))\n    }\n  }\n\n  return (\n    <div>\n    {persons.filter(p => !searchQuery || p.name.includes(searchQuery) || p.number.includes(searchQuery))\n        .map(person => <Person key={person.name} person={person} handleDeleteFunc={handleDelete}/>)}\n    </div>\n  )\n}\n\nexport default Persons\n","import React, {useState} from 'react'\nimport PersonService from \"../services/persons\";\n\nconst PersonForm = ({ persons, setPersons, setInfoMessage, setErrorMessage }) => {\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const addName = (event) => {\n    event.preventDefault()\n    const samePerson = persons.find(obj => obj.name === newName)\n    if (samePerson) {\n      if (window.confirm(`${newName} already exists. Do you want to update the phone number?`)) {\n        const updatedPerson = {\n          name: newName,\n          number: newNumber\n        }\n        PersonService.update(samePerson.id, updatedPerson).then(updated =>\n          setPersons(persons.map(person => person.id === updated.id? updated : person))\n        )\n        setInfoMessage(`Updated phone number of ${newName}`)\n        setTimeout(() => {\n          setInfoMessage(null)\n        }, 5000)\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n      PersonService.create(newPerson)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setInfoMessage(`Added ${newName}`)\n          setTimeout(() => {\n            setInfoMessage(null)\n          }, 5000)\n        })\n        .catch(error => {\n          console.log(error.response)\n          setErrorMessage(`${error.response.data.error}`)\n          setTimeout(() => {\n            setErrorMessage(null)\n          }, 5000)\n        })\n    }\n  }\n\n  return (\n    <form onSubmit={addName}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange}/>\n      </div>\n      <div>number: <input value={newNumber} onChange={handleNumberChange}/></div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default PersonForm\n","import React from 'react'\n\nconst Filter = ({ searchQuery, setSearchQuery }) => {\n\n  const handleQueryChange = (event) => {\n    setSearchQuery(event.target.value)\n  }\n  return (\n    <div>filter shown with<input value={searchQuery} onChange={handleQueryChange}/></div>\n  )\n}\n\nexport default Filter\n","import React, {useEffect, useState} from 'react'\nimport Persons from \"./components/Persons\";\nimport PersonForm from \"./components/PersonForm\";\nimport Filter from \"./components/Filter\";\nimport PersonService from \"./services/persons\";\nimport './index.css'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [infoMessage, setInfoMessage] = useState(null)\n  const [errorMessage, setErrorMessage] = useState(null)\n  const Notification = ({ infoMessage }) => {\n    if (infoMessage === null) {\n      return null\n    }\n\n    return (\n      <div className=\"info\">\n        {infoMessage}\n      </div>\n    )\n  }\n  const ErrorNotification = ({ errorMessage }) => {\n    if (errorMessage === null) {\n      return null\n    }\n\n    return (\n      <div className=\"error\">\n        {errorMessage}\n      </div>\n    )\n  }\n\n  useEffect(() => {\n    PersonService.getAll().then(initialPersons => setPersons(initialPersons))\n  }, [])\n\n  const [searchQuery, setSearchQuery] = useState('')\n\n  return (\n\n    <div>\n      <Notification infoMessage={infoMessage}></Notification>\n      <ErrorNotification errorMessage={errorMessage}></ErrorNotification>\n      <h2>Phonebook</h2>\n      <Filter query={searchQuery} setSearchQuery={setSearchQuery}/>\n\n      <h3>Add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} setInfoMessage={setInfoMessage} setErrorMessage={setErrorMessage } />\n\n      <h3>Numbers</h3>\n      <Persons persons={persons} searchQuery={searchQuery} setPersons={setPersons} setErrorMessage={setErrorMessage}/>\n    </div>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <App></App>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}